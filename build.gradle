apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'checkstyle'

ext {
    springVersion = "4.0.5.RELEASE"
    springSecurityVersion = "3.2.4.RELEASE"
    gwtVersion = "2.6.1"
    jacksonVersion = "2.4.0"
    orientdbVersion = "1.7.3"
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.springframework:spring-beans:$springVersion"
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-tx:$springVersion"

    // MAYBE REMOVE??? >>
//AAA duplicated with 'compile'    runtime "org.springframework:spring-tx:$springVersion"
    runtime "org.springframework:spring-aop:$springVersion"
    runtime "org.springframework:spring-context:$springVersion"
    runtime "org.springframework:spring-expression:$springVersion"
    runtime "org.springframework:spring-orm:$springVersion"
    runtime "org.springframework:spring-web:$springVersion"
    runtime "org.springframework.security:spring-security-acl:$springSecurityVersion"
    runtime "org.springframework.security:spring-security-taglibs:$springSecurityVersion"
    runtime "aopalliance:aopalliance:1.0"
    // << MAYBE REMOVE???

    compile "org.springframework.security:spring-security-core:$springSecurityVersion"
    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    runtime "org.springframework.security:spring-security-config:$springSecurityVersion"

    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"

    compile "com.orientechnologies:orientdb-core:$orientdbVersion"
    compile "com.orientechnologies:orientdb-object:$orientdbVersion"
    runtime "com.orientechnologies:orientdb-client:$orientdbVersion"

    runtime "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final"
    compile "log4j:log4j:1.2.9"
    compile "commons-beanutils:commons-beanutils:1.9.2"
    compile "org.apache.commons:commons-lang3:3.1"
    compile "com.google.guava:guava:13.0.1"

    compile files('./war/WEB-INF/lib/gwt-validation-0.9b2-SNAPSHOT-without-hibernate.jar')
    compile files('./war/WEB-INF/lib/ColorPicker-GWT-2.1.jar')


    // Compile GWT libs, needed for gwtCompile and the javaCompile
    // Also includes the servlet-api
    compile "com.google.gwt:gwt-user:$gwtVersion"
    compile "com.google.gwt:gwt-dev:$gwtVersion"
    runtime "com.google.gwt:gwt-servlet:$gwtVersion"
    runtime "com.google.gwt:gwt-codeserver:$gwtVersion"


    testCompile "junit:junit:4.+"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "com.orientechnologies:orientdb-server:$orientdbVersion"
    testCompile "org.mockito:mockito-core:1.9.5"
 }


eclipse { // https://gist.github.com/gpike/3722887
    project {
        name 'smevente'
        natures 'com.google.gwt.eclipse.core.gwtNature'
        buildCommand 'com.google.gdt.eclipse.core.webAppProjectValidator'
        buildCommand 'com.google.gwt.eclipse.core.gwtProjectValidator'
    }
    classpath {
        containers 'com.google.gwt.eclipse.core.GWT_CONTAINER'
        defaultOutputDir = file('war/WEB-INF/classes')
    }
}

war {
    war.rootSpec.exclude 'log4j-devel.properties'
    war.rootSpec.exclude '**/gwt-user*.jar' // because ot Tomcat deployment problem: jar not loaded. See Servlet Spec 3.0, section 10.7.2. Offending class: javax/servlet/Servlet.class
    war.rootSpec.exclude '**/gwt-dev*.jar'
    from('war') {
        exclude('smevente/')
        exclude('WEB-INF/classes/')
        exclude('WEB-INF/deploy/')
        exclude('WEB-INF/lib/gwt-servlet.jar')
    }
    from("${buildDir}/gwt") {
        include('smevente/')
    }
    baseName = 'ROOT'
}


task compileGwt (dependsOn: classes, type: JavaExec) {
  ext.buildDir = "${project.buildDir}/gwt"
  ext.extraDir = "${project.buildDir}/extra"

  inputs.source sourceSets.main.java.srcDirs
  inputs.dir sourceSets.main.output.resourcesDir
  outputs.dir buildDir

  // Workaround for incremental build (GRADLE-1483)
  outputs.upToDateSpec = new org.gradle.api.specs.AndSpec()

  doFirst {
    file(buildDir).mkdirs()
  }

  main = 'com.google.gwt.dev.Compiler'

  classpath {
    [
      sourceSets.main.java.srcDirs,           // Java source
      sourceSets.main.output.resourcesDir,    // Generated resources
      sourceSets.main.output.classesDir,      // Generated classes
      sourceSets.main.compileClasspath,       // Deps
    ]
  }

  args = [
    'veny.smevente.Smevente',
    '-war', buildDir,
    '-logLevel', 'INFO',
    '-localWorkers', '2',
    '-compileReport',
    '-extra', extraDir,
    '-style', 'DETAILED', // TODO 140701 disable later
    // '-draftCompile' // Speeds up compile with 25%
  ]

  maxHeapSize = '256M'
}

task gwtSuperDev(dependsOn: classes, type: JavaExec) {
    main = 'com.google.gwt.dev.codeserver.CodeServer'
    classpath {
        [
                sourceSets.main.java.srcDirs,           // Java source
                sourceSets.main.output.resourcesDir,    // Generated resources
                sourceSets.main.runtimeClasspath,       // Deps
        ]
    }
    args = [ 'veny.smevente.Smevente', ]
    maxHeapSize = '512M'
}
